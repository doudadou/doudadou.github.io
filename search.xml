<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Mac平台 ReactNative iOS&amp;Android 开发环境搭建总结</title>
      <link href="/2015/12/17/react-native-build/"/>
      <url>/2015/12/17/react-native-build/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="安装Homebrew"><a href="#安装Homebrew" class="headerlink" title="安装Homebrew"></a>安装Homebrew</h2><p>Homebrew 是 Mac 中的一个包管理器。没有安装的话，<a href="http://brew.sh" target="_blank" rel="noopener">点击这里安装</a> 我的版本如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; $ brew -v                                                                                                          ⬡ 5.0.0</span><br><span class="line">Homebrew 0.9.5 (git revision 576d6f; last commit 2015-10-10)</span><br></pre></td></tr></table></figure><p>版本更新使用：<code>brew update</code></p><h2 id="安装Node-js-和-npm"><a href="#安装Node-js-和-npm" class="headerlink" title="安装Node.js 和 npm"></a>安装Node.js 和 npm</h2><p>Node.js 需要 <em>4.0</em>(注意这里，之前就是一直默认使用的是io-js版本导致一直报错) 及其以上版本。安装好之后，npm 也有了</p><ul><li>通过 <code>nvm</code> 安装 <code>Node.js</code><br>  安装 nvm 可以通过 Homebrew 安装:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p>注：<code>nvm</code> 可以管理多个版本的Node和iojs<br>然后安装 Node.js：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install node &amp;&amp; nvm <span class="built_in">alias</span> default node</span><br></pre></td></tr></table></figure><ul><li>安装 <code>watchman</code> 和 <code>flow</code><br>这两个包分别是监控文件变化和类型检查的。安装如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install watchman</span><br><span class="line">brew install flow</span><br></pre></td></tr></table></figure><h1 id="安装-React-Native"><a href="#安装-React-Native" class="headerlink" title="安装 React-Native"></a>安装 React-Native</h1><p>通过 npm 安装即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g react-native-cli</span><br></pre></td></tr></table></figure><h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><ul><li><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2>  XCode 6.3 及其以上即可。</li><li><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2></li></ul><h3 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h3><p>官网下载最新版本安装</p><h3 id="SDK下载"><a href="#SDK下载" class="headerlink" title="SDK下载"></a>SDK下载</h3><p>启动 Android Studio， 选择”Preferences”–&gt;”Appearance &amp; Behavior”–&gt;”System Settings”–&gt;”Android SDK”–&gt;”Launch Standalone SDK Manager”,勾选以下项目：</p><pre><code>* Android SDK Build-tools version 23.0.1* Android 6.0 (API 23)* Android Support Repository</code></pre><p>这一步也需要翻墙，经过漫长的等待之后，成功安装。</p><h3 id="定义ANDROID-HOME环境变量"><a href="#定义ANDROID-HOME环境变量" class="headerlink" title="定义ANDROID_HOME环境变量"></a>定义ANDROID_HOME环境变量</h3><p>往你的<code>~/.bashrc</code>, <code>~/.bash_profile</code> 或者你终端所用的其它配置文件中增加以下内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你是通过Homebrew安装SDK的，则加入下列路径</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME=/usr/<span class="built_in">local</span>/opt/android-sdk</span><br><span class="line"><span class="comment"># 否则可能是（当然具体视你把SDK放在哪）：</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_HOME=~/Library/Android/sdk</span><br></pre></td></tr></table></figure><p>最后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile <span class="comment"># 立即生效</span></span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="初始化一个项目"><a href="#初始化一个项目" class="headerlink" title="初始化一个项目"></a>初始化一个项目</h1><p>在项目根目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure><p>初始化一个项目，其中 AwesomeProject 是项目名字，可随意修改。等待一段时间之后（具体视网络情况而定，需要翻墙），项目初始化完成。</p><h1 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h1><ul><li>iOS</li></ul><p><code>XCode</code> 打开项目，点击运行就好。修改 <code>index.ios.js</code>, 在模拟器中 <code>⌘ + R</code> 重新载入 <code>js</code> 即可看到相应的变化。iOS 真机调试，修改HTTP地址即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsCodeLocation = [NSURL URLWithString:@<span class="string">"http://localhost:8081/index.ios.bundle"</span>];</span><br></pre></td></tr></table></figure><ul><li>Android<br>  需要一个<code>Genymotion</code>模拟器,官方下载个人开发者免费还是挺不错的，<a href="https://www.genymotion.com/" target="_blank" rel="noopener">这里是模拟器地址</a>,使用模拟器还需要用到虚拟机，使用免费VirtualBox即可。<br>运行命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native run-android</span><br></pre></td></tr></table></figure><p>然后就会部署到模拟器，修改 <code>index.android.js</code> ，调出模拟器菜单键，选择重新载入 <code>js</code> 即可看到变化。</p><ul><li>Android 真机调试<br>  示例 APP 直接部署到真机，红色界面报错，无法连接到 Debug Server<br>  如果是 5.0 或者以上机型，可通过 adb 反向代理端口，将 Mac 端口反向代理到测试机上。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb reverse tcp:8081 tcp:8081</span><br></pre></td></tr></table></figure><p>如果 5.0 以下机器，应用安装到测试机上之后，摇动设备，在弹出菜单中选择 Dev Setting &gt; Debug Server host for device，然后填入 Mac 的 IP 地址（ifconfig 命令可查看本机 IP）</p><ul><li>在 Android Studio 中调试开发(暂未尝试)<br>可能希望在 Android Studio 打开项目，然后编译部署到真机。<br>这个时候，在命令行启动 Debug Server 即可：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Android </tag>
            
            <tag> ReactNative </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用ionic构建iOS与Android客户端</title>
      <link href="/2015/10/30/ionic-build/"/>
      <url>/2015/10/30/ionic-build/</url>
      
        <content type="html"><![CDATA[<h1 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g cordova ionic ios-sim</span><br></pre></td></tr></table></figure><p>ionic官网为开发者提供了多个开发模板，如：</p><p>空白模板（Black app）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic start myApp blank</span><br></pre></td></tr></table></figure><p>tabs模板 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic start myApp tabs</span><br></pre></td></tr></table></figure><p>sidemenu模板：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic start myApp sidemenu</span><br></pre></td></tr></table></figure><h2 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myIonicApp</span><br><span class="line">ionic platform add ios</span><br><span class="line">ionic build ios</span><br><span class="line">ionic prepare ios  重新打包</span><br><span class="line">ionic <span class="built_in">emulate</span> ios</span><br><span class="line">ionic <span class="built_in">emulate</span> ios -livereload</span><br><span class="line">ionic platform remove ios</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="Run-1"><a href="#Run-1" class="headerlink" title="Run"></a>Run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myIonicApp</span><br><span class="line">ionic platform add android</span><br><span class="line">ionic build android</span><br><span class="line">ionic <span class="built_in">emulate</span> android (模拟器运行)</span><br><span class="line">ionic run android (连接上手机运行)</span><br><span class="line">ionic prepare android 重新打包</span><br><span class="line">ionic platform remove android 移除环境</span><br></pre></td></tr></table></figure><h3 id="下载Android-Studio"><a href="#下载Android-Studio" class="headerlink" title="下载Android Studio"></a>下载Android Studio</h3><p><a href="http://developer.android.com/sdk/index.html" target="_blank" rel="noopener">http://developer.android.com/sdk/index.html</a></p><p>选择Tools &gt; Android &gt; <code>SDK Manager</code><br>选择下方<code>Launch Standalone SDK Manager</code>更新sdk</p><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ANDROID_HOME=<span class="string">"/Users/Kai/Library/Android/sdk"</span></span><br><span class="line"><span class="built_in">export</span> ANDROID_PLATFORM_TOOLS=<span class="string">"/Users/Kai/Library/Android/sdk/platform-tools"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:<span class="variable">$ANDROID_HOME</span>/tools:<span class="variable">$ANDROID_PLATFORM_TOOLS</span>"</span></span><br></pre></td></tr></table></figure><blockquote><p>来源：<a href="http://stackoverflow.com/questions/28076575/phonegap-cordova-no-such-file-build-template" target="_blank" rel="noopener">http://stackoverflow.com/questions/28076575/phonegap-cordova-no-such-file-build-template</a></p></blockquote><p>选择Tools &gt; Android &gt; <code>Sync Project with Gradle Files</code></p><h3 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装java</h3><p>android 5.0开始默认安装jdk1.7才能编译，但是由于mac系统自带jdk的版本是1.6，所以需要手动下载jdk1.7并配置</p><p>下载新Java</p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</a></p><p>Mac OSX 10.9以后系统就自带了Java 6的环境，路径在:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</span><br></pre></td></tr></table></figure><p>如果想要安装升级到Java 7的环境，步骤如下：</p><p>1.到Oracle官网下载系统对应JDK7的安装包, 地址在这里,安装成功后JDK7默认的路径在:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home</span><br></pre></td></tr></table></figure><p>2.安装成功后配置环境变量</p><p>在.bash_profile文件中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=$(/usr/libexec/java_home)</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>需要说明的是Mac OSX 10.5之后苹果就建议设置<code>$JAVA_HOME</code>变量到<code>/usr/libexec/java_home</code></p><p>3.设置完成后输入下列命令测试下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$java</span> -version</span><br><span class="line">java version <span class="string">"1.7.0_60"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.7.0_60-b19)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.60-b09, mixed mode)</span><br></pre></td></tr></table></figure><h1 id="查看系统安装的java版本"><a href="#查看系统安装的java版本" class="headerlink" title="查看系统安装的java版本"></a>查看系统安装的java版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$/usr/libexec/java_home -V</span><br><span class="line">Matching Java Virtual Machines (3):</span><br><span class="line">1.7.0_60, x86_64:<span class="string">"Java SE 7"</span></span><br><span class="line">/Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home</span><br><span class="line">1.6.0_65-b14-462, x86_64:<span class="string">"Java SE 6"</span>/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</span><br><span class="line">1.6.0_65-b14-462, i386:<span class="string">"Java SE 6"</span>/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</span><br></pre></td></tr></table></figure><h1 id="返回系统安装的java最高版本"><a href="#返回系统安装的java最高版本" class="headerlink" title="返回系统安装的java最高版本"></a>返回系统安装的java最高版本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$/usr/libexec/java_home</span><br><span class="line">/Library/Java/JavaVirtualMachines/jdk1.7.0_60.jdk/Contents/Home</span><br></pre></td></tr></table></figure><blockquote><p>来源：<a href="http://stormzhang.com/android/2014/06/27/manage-java-on-macosx/" target="_blank" rel="noopener">http://stormzhang.com/android/2014/06/27/manage-java-on-macosx/</a></p></blockquote><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><blockquote><p>Exception in thread “main” java.lang.RuntimeException: java.util.zip.ZipException: error in opening zip file<br>at org.gradle.wrapper.</p></blockquote><ul><li>下载Gradle( <a href="http://services.gradle.org/distributions/gradle-2.2.1-all.zip" target="_blank" rel="noopener">http://services.gradle.org/distributions/gradle-2.2.1-all.zip</a>)</li></ul><p>复制它放到这里变成这样<code>myApp\platforms\android\gradle\gradle-2.2.1-all.zip</code></p><p>然后编辑<code>myApp\platforms\android\cordova\lib\build.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> distributionUrl = <span class="string">'distributionUrl=http\\://services.gradle.org/distributions/gradle-2.2.1-all.zip'</span>;</span><br></pre></td></tr></table></figure><p> 替换成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> distributionUrl = <span class="string">'distributionUrl=../gradle-2.2.1-all.zip'</span>;</span><br></pre></td></tr></table></figure><blockquote><p>来源：<a href="http://stackoverflow.com/questions/29874564/ionic-build-android-error-when-download-gradle" target="_blank" rel="noopener">http://stackoverflow.com/questions/29874564/ionic-build-android-error-when-download-gradle</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ionic </tag>
            
            <tag> iOS </tag>
            
            <tag> Android </tag>
            
            <tag> cordova </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ionic技巧与坑</title>
      <link href="/2015/09/27/ionic-skill/"/>
      <url>/2015/09/27/ionic-skill/</url>
      
        <content type="html"><![CDATA[<h2 id="应用Build时报错-Cordova-app-failing-to-Archive-with-Xcode-7-1-Cordova-CDVViewController-h-file-not-found"><a href="#应用Build时报错-Cordova-app-failing-to-Archive-with-Xcode-7-1-Cordova-CDVViewController-h-file-not-found" class="headerlink" title="应用Build时报错 Cordova app failing to Archive with Xcode 7.1 (Cordova/CDVViewController.h file not found)"></a>应用Build时报错 Cordova app failing to Archive with Xcode 7.1 (Cordova/CDVViewController.h file not found)</h2><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>加入这行命令在 <code>Build Settings -&gt; Header Search Paths</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"<span class="variable">$(OBJROOT)</span>/UninstalledProducts/<span class="variable">$(PLATFORM_NAME)</span>/include"</span></span><br></pre></td></tr></table></figure><h2 id="Ionic-IOS9访问http受到限制"><a href="#Ionic-IOS9访问http受到限制" class="headerlink" title="Ionic IOS9访问http受到限制"></a>Ionic IOS9访问http受到限制</h2><h3 id="错误："><a href="#错误：" class="headerlink" title="错误："></a>错误：</h3><blockquote><p>Application Transport Security has blocked a cleartext HTTP (http\://) resource load since it is insecure. Temporary exceptions can be configured via your app’s Info.plist file.    </p></blockquote><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>手动在 <code>项目名-Info.plist</code>第一个<code>&lt;dict&gt;</code>标签下添加下面标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAppTransportSecurity<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">key</span>&gt;</span>NSAllowsArbitraryLoads<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="cordova-插件使用命令"><a href="#cordova-插件使用命令" class="headerlink" title="cordova 插件使用命令"></a>cordova 插件使用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//安装插件</span><br><span class="line">cordova plugin add org.apache.cordova.device</span><br><span class="line"></span><br><span class="line">//查看插件列表</span><br><span class="line">cordova plugin list</span><br><span class="line"></span><br><span class="line">//删除插件</span><br><span class="line">cordova plugin remove org.apache.cordova.device</span><br></pre></td></tr></table></figure><h2 id="隐藏topbar"><a href="#隐藏topbar" class="headerlink" title="隐藏topbar"></a>隐藏topbar</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ion-view</span> <span class="attr">hide-nav-bar</span>=<span class="string">"true"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="关闭安卓转场特效"><a href="#关闭安卓转场特效" class="headerlink" title="关闭安卓转场特效"></a>关闭安卓转场特效</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ionicConfigProvider. platform.android.views.transition=none</span><br><span class="line">maxCache也要设置成<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="多modal显示问题"><a href="#多modal显示问题" class="headerlink" title="多modal显示问题"></a>多modal显示问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ionicModal.fromTemplateUrl(<span class="string">'templates/modal-login.html'</span>, &#123;</span><br><span class="line">        id: <span class="string">'login'</span>,</span><br><span class="line">        scope: $scope,</span><br><span class="line">        animation: <span class="string">'slide-in-up'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">modal</span>) </span>&#123;</span><br><span class="line">        $scope.modalLogin = modal;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $scope.openModal = <span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (index === <span class="string">'login'</span>)&#123;</span><br><span class="line">        $scope.modalLogin.show();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    $scope.closeModal = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $scope.modalLogin.hide();</span><br><span class="line">    &#125;;</span><br><span class="line">    $scope.$on(<span class="string">'$destroy'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $scope.modalLogin.remove();</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>加入id 索引值来区分多个modal</p></blockquote><a id="more"></a><h2 id="使Chrome和Chromium实现跨域请求"><a href="#使Chrome和Chromium实现跨域请求" class="headerlink" title="使Chrome和Chromium实现跨域请求"></a>使Chrome和Chromium实现跨域请求</h2><p>通过命令行启动:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">open -a <span class="string">"Google Chrome"</span> --args --<span class="built_in">disable</span>-web-security</span><br><span class="line">open -a <span class="string">"Chromium"</span> --args --<span class="built_in">disable</span>-web-security</span><br></pre></td></tr></table></figure><h2 id="cordova-ionic-emulate-时选择模拟器版本（iOS）"><a href="#cordova-ionic-emulate-时选择模拟器版本（iOS）" class="headerlink" title="cordova/ionic emulate 时选择模拟器版本（iOS）"></a>cordova/ionic emulate 时选择模拟器版本（iOS）</h2><p>在项目的根目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ./platforms/ios/cordova/lib/list-emulator-images</span><br><span class="line">iPhone-4s</span><br><span class="line">iPhone-5</span><br><span class="line">iPhone-5s</span><br><span class="line">iPhone-6-Plus</span><br><span class="line">iPhone-6</span><br><span class="line">iPad-2</span><br><span class="line">iPad-Retina</span><br><span class="line">iPad-Air</span><br><span class="line">Resizable-iPhone</span><br><span class="line">Resizable-iPad</span><br></pre></td></tr></table></figure><p>运行模拟器任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic run ios --target iPhone-5</span><br></pre></td></tr></table></figure><blockquote><p>注意：iPhone别写成iphone。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ionic </tag>
            
            <tag> Angularjs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用webpack搭建ReactJS环境安装流程</title>
      <link href="/2015/06/10/webpack-reactjs-build/"/>
      <url>/2015/06/10/webpack-reactjs-build/</url>
      
        <content type="html"><![CDATA[<p>webpack搭建ReactJS环境首先看下项目模型</p><h1 id="项目模型"><a href="#项目模型" class="headerlink" title="项目模型"></a>项目模型</h1><p>/app<br>- main.js<br>- TestOne.js<br>- TestTwo.js<br>/build<br>- bundle.js(会通过webpack自动生成)<br>- index.html<br>- package.json<br>- webpack.config.js</p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir app build &amp;&amp; touch webpack.config.js app/main.js app/TestOne.js app/TestTwo.js build/index.html</span><br></pre></td></tr></table></figure><h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* main.js */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"><span class="keyword">var</span> TestOne = <span class="built_in">require</span>(<span class="string">'./TestOne.js'</span>);</span><br><span class="line"><span class="keyword">var</span> TestTwo = <span class="built_in">require</span>(<span class="string">'./TestTwo.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Main = React.createClass(&#123;</span><br><span class="line">    getInitialState: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="keyword">switch</span>: <span class="literal">true</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    _toggle() &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            <span class="keyword">switch</span>: !<span class="keyword">this</span>.state.switch</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;input type=<span class="string">"button"</span> onClick=&#123;<span class="keyword">this</span>._toggle&#125; value=<span class="string">"Press Me!"</span>/&gt;</span><br><span class="line">                &#123;<span class="keyword">this</span>.state.switch ? <span class="xml"><span class="tag">&lt;<span class="name">TestOne</span> /&gt;</span> : <span class="tag">&lt;<span class="name">TestTwo</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>      </span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">React.render(<span class="xml"><span class="tag">&lt;<span class="name">Main</span> /&gt;</span>, document.body);</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="TestOne-js"><a href="#TestOne-js" class="headerlink" title="TestOne.js"></a>TestOne.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* TestOne.js */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> TestOne = React.createClass(&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            <span class="comment">/* jshint ignore: start*/</span></span><br><span class="line">            &lt;div&gt;Hello I am TestOne Component&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            /</span>* jshint ignore: end*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">module.exports = TestOne;</span></span><br></pre></td></tr></table></figure><h2 id="TestTwo-js"><a href="#TestTwo-js" class="headerlink" title="TestTwo.js"></a>TestTwo.js</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* TestTwo.js */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> React = <span class="built_in">require</span>(<span class="string">'react'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> TestTwo = React.createClass(&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            <span class="comment">/* jshint ignore: start*/</span></span><br><span class="line">            &lt;h1&gt;Hello I am TestTwo Component&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">            /</span>* jshint ignore: end*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">module.exports = TestTwo;</span></span><br></pre></td></tr></table></figure><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack webpack-dev-server react-hot-loader babel-loader --save-dev</span><br><span class="line">npm install --save style-loader css-loader less-loader autoprefixer-loader</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init  // 创建 package.json</span><br></pre></td></tr></table></figure><p>首先，先到 <code>package.json</code> 內加入一個新 <code>dev</code> 的指令:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"webpack"</span>,</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"webpack-dev-server --devtool eval --progress --colors --hot --content-base build"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接著更新 <code>index.html</code>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://localhost:8080/webpack-dev-server.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编辑<code>webpack.config.js</code>为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">    entry: [<span class="string">'webpack-dev-server/client?http://localhost:8080'</span>,</span><br><span class="line">    <span class="string">'webpack/hot/only-dev-server'</span>,</span><br><span class="line">    path.resolve(__dirname, <span class="string">'app/main.js'</span>)],</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        loaders: [&#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        loaders: [<span class="string">'react-hot'</span>, <span class="string">'babel'</span>],</span><br><span class="line">        include: path.join(__dirname, <span class="string">'app'</span>)</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">    test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">loader: <span class="string">'style-loader!css-loader!autoprefixer-loader!less-loader'</span></span><br><span class="line">&#125;</span><br><span class="line">    ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">    <span class="comment">//new webpack.HotModuleReplacementPlugin(),</span></span><br><span class="line">    <span class="keyword">new</span> webpack.NoErrorsPlugin()</span><br><span class="line">]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = config;</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:8080/webpack-dev-server/" target="_blank" rel="noopener">http://localhost:8080/webpack-dev-server/</a> 尝试是否跑起来</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webpack </tag>
            
            <tag> ReactJs </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
